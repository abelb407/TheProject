@page "/quiz"
@using TheProject.Model
@using TheProject.Components
@inject NavigationManager NavigationManager
@inherits QuizCardBase


<h3>Quiz:</h3>

 <div class="container"
     <div class="quiz">
@*         If questions are left, load the quiz interface *@
       @if (questionIndex < Questions.Count() ) 
        {

             <div class="app-title">
             QUIZ
             </div>
             <div class="quiz-header">
                @Questions[questionIndex].Question
             </div>
             <div class="quiz-body">
                @foreach (var option in Questions[questionIndex].Option)
                {
             @*        Code to display each option stored for the question *@
                    <div>
                     <OptionCard Option="@option" OnOptionSelected="OptionSelected"></OptionCard>
                    </div>
                }
            </div>

        }
       @*  If there are no more questions, load the results interface *@
       else
        {
           <div class="app-title">
               RESULTS
           </div>
           <div class="quiz-header">
            @*  Logic to decide if the student got above half (good) or below half (not good) *@
             @(score > (Questions.Count()/2) ? "Nice work!!" : "Try again!")
            </div>
           <div class="quiz-body">
            <h1> Your score is: @score </h1>
           </div>
           <div class="quiz-floor"> 

               <button class="btn restart-btn" onclick="@RestartQuiz" > Restart! </button>
               <a href="/" class="btn next-btn">To Home</a>
           </div>
        }


      </div>
    </div>
       


        

@code {


    public string Question { get; set; }




}
