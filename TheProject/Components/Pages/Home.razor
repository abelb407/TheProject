@page "/"


@inject NavigationManager NavigationManager
@inject UserManager<User> userManager 
@inject UserProvider UserProvider
@inject IHttpContextAccessor httpContextAccessor 
@using TheProject.Context
@using TheProject.Components.Account
@using Microsoft.AspNetCore.Http @*For retrieving client ID*@
@using Microsoft.AspNetCore.Identity @*For retrieving client ID*@
@using Microsoft.AspNetCore.Components.Authorization @*Page only accessible by those authorized*@



@using TheProject.Model

<PageTitle>Home</PageTitle>

<div class="body">

<h1>Hello @username. </h1>

<h7> Check out some of our features! </h7>

<br /> 
<br /> 

    <div class="container">
        <div class="row marginal-spacing">
            <div class="col-md-4">
                <div class="card bg-dark text-white" style="width: 18rem;">
                    <img class="card-img-top" src="/Notes.PNG" alt="Card image cap">
                    <div class="card-body">
                        <h5 class="card-title">Notes</h5>
                        <p class="card-text">Study from our selection of notes.</p>
                        <a href="/notes" class="btn bg-white text-dark nbutton">Select</a>
                    </div>
                </div>
            </div>

            <div class="col-md-4">
                <div class="card bg-dark text-white" style="width: 18rem;">
                    <img class="card-img-top" src="/Quiz.PNG" alt="Card image cap">
                    <div class="card-body">
                        <h5 class="card-title">Quiz</h5>
                        <p class="card-text">Test your knowledge.</p>
                        <a href="/quiz" class="btn bg-white text-dark nbutton">Select</a>
                    </div>
                </div>
            </div>

            <div class="col-md-4">
                <div class="card bg-dark text-white" style="width: 18rem;">
                    <img class="card-img-top" src="/Leaderboard.PNG" alt="Card image cap">
                    <div class="card-body">
                        <h5 class="card-title">Leaderboard</h5>
                        <p class="card-text">Check out the top scorers.</p>
                        <a href="/leaderboard" class="btn bg-white text-dark nbutton">Select</a>
                    </div>
                </div>
            </div>
        </div>
    </div>


    <br />
    <br />

    <div class="badge-container">
        <div class="row marginal-spacing">
            <div class="col-md-6 text-center">
                <div class="badge-item">
                    <p>Points</p>
                    <span class="badge rounded-pill bg-dark text-white bigger-badge">@points</span>
                </div>
            </div>
            <div class="col-md-6 text-center">
                <div class="badge-item">
                    <p>Questions</p>
                    <span class="badge rounded-pill bg-dark text-white bigger-badge">@totalQuestions</span>
                </div>
            </div>
        </div>
    </div>

<br />
<br />

@if (points > 100)
    {
        <h1> Congratulations on 100 points :) </h1>
    }



  <EditForm>  </EditForm>

<h4> Progession Bars: </h4>

    <div class="progress-container mb-4">
        <div role="progressbar" class="progress-bar bg-dark text-white" style="--progress-width:@(points * 100 / 255)%;">@points</div>
    </div>


    <div class="progress-container mb-4">
        <div role="progressbar" class="progress-bar bg-dark text-white" style="--progress-width:@(totalQuestions * 100 / 255)%;">@totalQuestions</div>
    </div>


 <h5> User search: </h5>

    <div class="search-container">
        <input @bind="searchText" placeholder="Enter username" />
        <button class="btn btn-primary bg-dark text-white" @onclick="Search">Search</button>
    </div>


    @if (searchResult != null && searchResult.Count > 0)
    {

        <h5> Users Found: @searchResult.Count </h5>

        <ul>
            @foreach (var user in searchResult)
            {
                <li>
                    <strong>Username:</strong> @user.UserName <br />
                    <strong>Points:</strong> @user.Points <br />
                    <strong>Total Questions Answered:</strong> @user.totalQuestions
                </li>
            }
        </ul>
    }
    else if (searchExecuted)
    {
        <p>No users found.</p>
    }

</div>



<div class="search-container"> 



</div>

@code {

    private string username;
    private int points;
    private int totalQuestions;
    private string searchText;
    private List<User> searchResult;
    private List<User> AllUsers { get; set; } = new List<User>();
    private bool searchExecuted = false;


    protected override async Task OnInitializedAsync()
    {
        username = "guest";
        points = 0;
        totalQuestions = 0; 

       
       
        var context = httpContextAccessor.HttpContext;

        var currentUser = await userManager.GetUserAsync(context.User); 
        if (currentUser != null)
        {
            username = currentUser.UserName;
            points = currentUser.Points;
            totalQuestions = currentUser.totalQuestions; 
        }

    }

    private async Task Search()
    {
        searchExecuted = true;
        searchResult = await UserProvider.GetUsersAsync(searchText);

    }

    // private string GetColour(int? val)
    // {
    //     if (val > 99)
    //     {
    //         return "progress-bar progress-bar-striped progress-bar-animated bg-success";
    //     }

    //     else if (val > 59)
    //     {
    //         return "progress-bar bg-warning";
    //     }

    //     else
    //     {
    //         return "progress-bar bg-danger";
    //     }
    // }


}